require('dotenv').config();
process.env.TZ = 'Asia/Seoul';

const express       = require('express');
const axios         = require('axios');
const { MongoClient } = require('mongodb');

const {
  MONGODB_URI,
  DB_NAME,
  CAFE24_CLIENT_ID,
  CAFE24_CLIENT_SECRET,
  APP_URL,
  PORT = 5000
} = process.env;

const app = express();

// ‚îÄ‚îÄ‚îÄ MongoDB Ïó∞Í≤∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
let db;
async function initDb() {
  const client = new MongoClient(MONGODB_URI);
  await client.connect();
  db = client.db(DB_NAME);
  console.log('‚ñ∂Ô∏è MongoDB connected');
}

// ‚îÄ‚îÄ‚îÄ (A) Í∂åÌïú ÏöîÏ≤≠ ÎùºÏö∞Ìä∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// ÌÖåÏä§Ìä∏Ïö©: Î∏åÎùºÏö∞Ï†ÄÏóêÏÑú https://your-domain/install/{mallId} Ìò∏Ï∂ú
app.get('/install/:mallId', (req, res) => {
  const { mallId }   = req.params;
  const redirectUri  = `${APP_URL}/auth/callback`;
  const params       = new URLSearchParams({
    response_type: 'code',
    client_id:     CAFE24_CLIENT_ID,
    redirect_uri:  redirectUri,
    scope:         'mall.read_category,mall.read_product,mall.read_analytics',
    state:         Date.now().toString(),
  });
  console.log('üîç redirect_uri ‚Üí', redirectUri);
  res.redirect(`https://${mallId}.cafe24.com/api/v2/oauth/authorize?${params}`);
});

// ‚îÄ‚îÄ‚îÄ (B) OAuth ÏΩúÎ∞± Ìï∏Îì§Îü¨: ÌÜ†ÌÅ∞ ÍµêÌôò & DB Ï†ÄÏû• ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
app.get('/auth/callback', async (req, res) => {
  const { code, mall_id: mallId } = req.query;
  const redirectUri = `${APP_URL}/auth/callback`;

  if (!code || !mallId) {
    return res.status(400).send('code ÎòêÎäî mall_idÍ∞Ä ÏóÜÏäµÎãàÎã§.');
  }

  try {
    // 1) Ïπ¥Ìéò24Ïóê ÌÜ†ÌÅ∞ ÏöîÏ≤≠
    const tokenUrl = `https://${mallId}.cafe24api.com/api/v2/oauth/token`;
    const creds    = Buffer.from(
      `${CAFE24_CLIENT_ID}:${CAFE24_CLIENT_SECRET}`
    ).toString('base64');
    const body = new URLSearchParams({
      grant_type:   'authorization_code',
      code,
      redirect_uri: redirectUri
    }).toString();

    const { data } = await axios.post(tokenUrl, body, {
      headers: {
        'Content-Type':  'application/x-www-form-urlencoded',
        'Authorization': `Basic ${creds}`
      }
    });

    // data.access_token, data.refresh_token, data.expires_in

    // 2) MongoDBÏóê mallId Í∏∞Ï§ÄÏúºÎ°ú Ï†ÄÏû•
    await db.collection('token').updateOne(
      { mallId },
      { $set: {
          mallId,
          accessToken:  data.access_token,
          refreshToken: data.refresh_token,
          obtainedAt:   new Date(),
          expiresIn:    data.expires_in
        }
      },
      { upsert: true }
    );

    console.log(`‚úÖ [${mallId}] ÌÜ†ÌÅ∞ Ï†ÄÏû• ÏôÑÎ£å`, {
      accessToken: data.access_token.slice(0,8) + '‚Ä¶',
      refreshToken: data.refresh_token.slice(0,8) + '‚Ä¶'
    });

    // 3) ÏôÑÎ£å Î©îÏãúÏßÄ
    res.send('Ïï± ÏÑ§Ïπò Î∞è ÌÜ†ÌÅ∞ ÍµêÌôò ÏôÑÎ£å! DBÏóê Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.');
  }
  catch (err) {
    console.error('‚ùå ÌÜ†ÌÅ∞ ÍµêÌôò Ïã§Ìå®', err.response?.data || err);
    res.status(500).send('ÌÜ†ÌÅ∞ ÍµêÌôò Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
  }
});

// ‚îÄ‚îÄ‚îÄ ÏÑúÎ≤Ñ ÏãúÏûë ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
initDb().then(() => {
  app.listen(PORT, () => {
    console.log(`‚ñ∂Ô∏è Server running on port ${PORT}`);
  });
});
